import delegate, { ParsedPath, FormatInputPathObject } from 'path';

declare const slash: (str?: string) => string;
declare const normalize: (path: string) => string;
declare const join: (...paths: string[]) => string;
declare const resolve: (...paths: string[]) => string;
declare const isAbsolute: (path: string) => boolean;
declare const relative: (from: string, to: string) => string;
declare const dirname: (path: string) => string;
declare const basename: (path: string, suffix?: string) => string;
declare const extname: (path: string) => string;
declare const parse: (path: string) => ParsedPath;
declare const format: (pathObject: FormatInputPathObject) => string;
declare const toNamespacedPath: (path: string) => string;
declare const _default: {
    slash: (str?: string) => string;
    normalize: (path: string) => string;
    join: (...paths: string[]) => string;
    resolve: (...paths: string[]) => string;
    isAbsolute: (path: string) => boolean;
    relative: (from: string, to: string) => string;
    dirname: (path: string) => string;
    basename: (path: string, suffix?: string | undefined) => string;
    extname: (path: string) => string;
    parse: (path: string) => delegate.ParsedPath;
    format: (pathObject: delegate.FormatInputPathObject) => string;
    toNamespacedPath: (path: string) => string;
};

export { basename, _default as default, dirname, extname, format, isAbsolute, join, normalize, parse, relative, resolve, slash, toNamespacedPath };
